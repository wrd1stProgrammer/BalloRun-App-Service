name: Build & Push → ASG Refresh
on:
  push:
    branches: [ sub ]

env:
  REGION: ap-northeast-2
  ASG_NAME: ballorunAutoScaling        # ← 본인 Auto Scaling Group 이름

jobs:
# ──────────────────────────────────────────────────────────────── #
# 1) Build & Push Docker image
# ──────────────────────────────────────────────────────────────── #
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Decode GCP key            
        run: |
          echo "${{ secrets.SERVICE_ACCOUNT_KEY }}" | base64 -d > back/key.json
          jq . back/key.json >/dev/null

      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (latest)
        run: |
          docker build -t sikgates/newimage:latest ./back
          docker push  sikgates/newimage:latest

# ──────────────────────────────────────────────────────────────── #
# 2) ASG Instance Refresh (Access-Key 방식)
# ──────────────────────────────────────────────────────────────── #
  rollout:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.REGION }}

      - name: Start ASG Instance Refresh
        run: |
          aws autoscaling start-instance-refresh \
            --auto-scaling-group-name "$ASG_NAME" \
            --strategy Rolling \
            --preferences '{"MinHealthyPercentage":90,"InstanceWarmup":180}'
